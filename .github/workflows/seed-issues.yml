name: "Seed Issues (validate + sync)"

on:
  pull_request:
    paths:
      - "issues/seed.json"
      - "schemas/issues.seed.schema.json"
      - "scripts/seed-issues.sh"
      - ".github/workflows/seed-issues.yml"
      - "docs/ISSUE_SEEDING.md"
  push:
    branches: ["main"]
    paths:
      - "issues/seed.json"
      - "schemas/issues.seed.schema.json"
      - "scripts/seed-issues.sh"
      - ".github/workflows/seed-issues.yml"
  workflow_dispatch: {}

permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  # IMPORTANT: default to the repo where the workflow runs
  REPO_DEFAULT: ${{ github.repository }}
  PROJECT_OWNER: ${{ github.repository_owner }}
  PROJECT_TITLE: FlakeRadar Roadmap

jobs:
  validate-and-dryrun:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install ajv-cli
        run: npm i -g ajv-cli
      - name: Validate seed.json against schema
        run: ajv validate -s schemas/issues.seed.schema.json -d issues/seed.json --spec=draft2020
      - name: Dry-run seeding (no writes)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRY_RUN: "1"
          SKIP_LOCAL_VALIDATION: "1"
        run: bash scripts/seed-issues.sh
      - name: Comment summary on PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          num=${{ github.event.pull_request.number }}
          gh pr comment "$num" --body-file "$GITHUB_STEP_SUMMARY"

  apply-on-main:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { persist-credentials: false }
      - uses: actions/setup-node@v4
        with: { node-version: "20" }
      - name: Install ajv-cli
        run: npm i -g ajv-cli
      - name: Validate seed.json against schema
        run: ajv validate -s schemas/issues.seed.schema.json -d issues/seed.json --spec=draft2020
      - name: Show gh version (debug)
        run: gh --version
      - name: Apply seeding (create/update/close)
        env:
          # If you later target other repos, add GH_TOKEN_SEED with repo scope covering them
          GH_TOKEN: ${{ secrets.GH_TOKEN_SEED || secrets.GITHUB_TOKEN }}
          CLOSE_MISSING: "1"
          SKIP_LOCAL_VALIDATION: "1"
        run: bash scripts/seed-issues.sh
      - name: Commit updated issues/map.json (if changed)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "flakeradar-bot"
          git config user.email "actions@users.noreply.github.com"
          if [[ -n "$(git status --porcelain issues/map.json)" ]]; then
            git add issues/map.json
            git commit -m "ci(seed): update issues map [skip ci]"
            git push "https://${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" HEAD:main
          else
            echo "No map changes to commit."
          fi