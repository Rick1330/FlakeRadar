name: "Seed Issues (validate + sync)"

on:
  # Safe PR path with write perms for comments, but DO NOT run untrusted scripts.
  pull_request_target:
    types: [opened, reopened, synchronize, edited]
    paths:
      - "issues/seed.json"
      - "schemas/issues.seed.schema.json"
      - ".github/workflows/seed-issues.yml"
      - "docs/ISSUE_SEEDING.md"
  # Manual run
  workflow_dispatch: {}
  # Apply on main
  push:
    branches: ["main"]
    paths:
      - "issues/seed.json"
      - "schemas/issues.seed.schema.json"
      - "scripts/seed-issues.sh"
      - ".github/workflows/seed-issues.yml"

permissions:
  contents: write
  issues: write
  pull-requests: write
  projects: write

env:
  REPO_DEFAULT: rick1330/flakeradar-program
  PROJECT_OWNER: rick1330
  PROJECT_TITLE: FlakeRadar Roadmap

jobs:
  pr-validate:
    if: github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base (safe default)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Checkout PR HEAD (read only)
        run: |
          git fetch origin pull/${{ github.event.pull_request.number }}/head:pr-${{ github.event.pull_request.number }}
          git checkout pr-${{ github.event.pull_request.number }}
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install ajv-cli
        run: npm i -g ajv-cli
      - name: Validate seed.json against schema
        id: validate
        continue-on-error: true
        run: |
          if [ -f schemas/issues.seed.schema.json ] && [ -f issues/seed.json ]; then
            ajv validate -s schemas/issues.seed.schema.json -d issues/seed.json --spec=draft2020 --strict=true
          else
            echo "No seed/schema changes in PR."
          fi
      - name: Check for legacy issue templates (about:)
        id: legacy
        continue-on-error: true
        run: |
          if [ -d ".github/ISSUE_TEMPLATE" ]; then
            if grep -R --line-number -E '^[[:space:]-]*about:' .github/ISSUE_TEMPLATE || true; then
              echo "found_legacy=true" >> $GITHUB_OUTPUT
            else
              echo "found_legacy=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "found_legacy=false" >> $GITHUB_OUTPUT
          fi
      - name: Prepare PR summary
        run: |
          echo "### Issue Seed PR Check" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          if [ "${{ steps.validate.outcome }}" != "success" ]; then
            echo "**Schema validation failed**. See log below." >> "$GITHUB_STEP_SUMMARY"
            echo "" >> "$GITHUB_STEP_SUMMARY"
            echo "\`\`\`" >> "$GITHUB_STEP_SUMMARY"
            ajv validate -s schemas/issues.seed.schema.json -d issues/seed.json --spec=draft2020 --strict=true 2>> "$GITHUB_STEP_SUMMARY" || true
            echo "\`\`\`" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "Schema validation: OK" >> "$GITHUB_STEP_SUMMARY"
          fi
          if [ "${{ steps.legacy.outputs.found_legacy }}" = "true" ]; then
            echo "" >> "$GITHUB_STEP_SUMMARY"
            echo ":warning: Found legacy issue templates using 'about:'. Please update to Issue Forms (use 'description:' instead) or remove legacy templates. See docs/ISSUE_FORMS_MIGRATION.md." >> "$GITHUB_STEP_SUMMARY"
          fi
      - name: Comment summary on PR (safe)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          num=${{ github.event.pull_request.number }}
          if [ -s "$GITHUB_STEP_SUMMARY" ]; then
            gh pr comment "$num" --body-file "$GITHUB_STEP_SUMMARY"
          else
            gh pr comment "$num" --body "Seed workflow ran. See job logs for details."
          fi

  apply-on-main:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install ajv-cli
        run: npm i -g ajv-cli
      - name: Validate seed.json against schema
        run: ajv validate -s schemas/issues.seed.schema.json -d issues/seed.json --spec=draft2020 --strict=true
      - name: Apply seeding (create/update/close)
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN_SEED || secrets.GITHUB_TOKEN }}
          CLOSE_MISSING: "1"
        run: bash scripts/seed-issues.sh
      - name: Commit updated issues/map.json (if changed)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "flakeradar-bot"
          git config user.email "actions@users.noreply.github.com"
          if [[ -n "$(git status --porcelain issues/map.json)" ]]; then
            git add issues/map.json
            git commit -m "ci(seed): update issues map [skip ci]"
            git push "https://${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" HEAD:main
          else
            echo "No map changes to commit."
          fi